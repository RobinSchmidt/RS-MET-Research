We are given M function values and derivatives at x=0 and N function values 
and derivatives at x=1 and want to find a polynomial that satisfies these
constraints. Let's take for example N=3, M=4, so we have given
z0 := f(0), z1 := f'(0), z2 = f''(0) and
o0 := f(1), o1 := f'(1), o2 = f''(1), o3 := f'''(1)
these are N+M = 3+4 = 7 constraints calling for a K=6 th order polynomial.

The polynomial and its derivatives are given by:
p0(x) = a0*x^0 +   a1*x^1 +     a2*x^2 +       a3*x^3 +       a4*x^4 +       a5*x^5 +       a6*x^6
p1(x) =          1*a1*x^0 +   2*a2*x^1 +     3*a3*x^2 +     4*a4*x^3 +     5*a5*x^4 +     6*a6*x^5
p2(x) =                     1*2*a2*x^0 +   2*3*a3*x^1 +   3*4*a4*x^2 +   4*5*a5*x^3 +   5*6*a6*x^4
p3(x) =                                  1*2*3*a3*x^0 + 2*3*4*a4*x^1 + 3*4*5*a5*x^2 + 4*5*6*a6*x^3

The first 3 coefficients a0,a1,a2 can be directly computed from z0,z1,z2 by
ak = zk/k! and for the remaining coefficients a3,a4,a5,a6, we get a 4-by-4 
linear system of equations from the constraints o0,o1,o2,o3:

r0 := o0 - a0*x^0 -   a1 -     a2 =       a3 +       a4 +       a5 +       a6
r1 := o1 -          1*a1 -   2*a2 =     3*a3 +     4*a4 +     5*a5 +     6*a6
r2 := o2 -                 1*2*a2 =   2*3*a3 +   3*4*a4 +   4*5*a5 +   5*6*a6
r3 := o3                          = 1*2*3*a3 + 2*3*4*a4 + 3*4*5*a5 + 4*5*6*a6

r0 = |       1        1        1        1 |   |a3|
r1 = |     3*1      4*1      5*1      6*1 | * |a4|
r2 = |   2*3*1    3*4*1    4*5*1    5*6*1 |   |a5|
r3 = | 1*2*3*1  2*3*4*1  3*4*5*1  4*5*6*1 |   |a6|

the augmented coefficient matrix looks like:

    1      1      1      1 | r0
    3      4      5      6 | r1
  2*3    3*4    4*5    5*6 | r2
1*2*3  2*3*4  3*4*5  4*5*6 | r3

we subtract 3 times the first row from the second, 2*3 times the first from the third and
1*2*3 times the first from the fourth:

    1              1              1              1       | r0
    3-3            4-3            5-3            6-3     | r1-    3*r0
  2*3-2*3        3*4-2*3        4*5-2*3        5*6-2*3   | r2-  2*3*r0
1*2*3-1*2*3    2*3*4-1*2*3    3*4*5-1*2*3    4*5*6-1*2*3 | r3-1*2*3*r0

which simplifies to:

1      1              1              1       | r0
0      4-3            5-3            6-3     | r1-    3*r0
0    3*4-2*3        4*5-2*3        5*6-2*3   | r2-  2*3*r0
0  2*3*4-1*2*3    3*4*5-1*2*3    4*5*6-1*2*3 | r3-1*2*3*r0

...hmmm...this seems not to lead to a simplified pattern that avoids the general
linear system solver - however, it seems to be a good idea to provide an 
implementation where M and N can indeed be different. the size of the linear system
is only determined by N - more precision at x=0 is cheap and if x=0 corresponds to DC
and x=1 to fs/2, it makes sense to have a better approximation at x=0 - especially
when oversampling is used (i'm thinking of approximation the ladder coeff formulas)






