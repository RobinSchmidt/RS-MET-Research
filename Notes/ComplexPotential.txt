We try to find a potential function for the complex function:
 
   w(z) = z^2
   
seen as 2D Polya vector field:
 
   w(x,y) = (x^2-y^2, -2*x*y) = (w1(x,y), w2(x,y))
   
We integrate w1 with respect to x:

  P(x,y) = x^3/3 - x*y^2 + g(y)
  
To find g(y), we take the partial derivative of P with respect to y and compare the result to our 
desired -2*x*y:

  dP/dy = -2*x*y + g'(y)
  
which turns out to be exactly equal to what we want if we set g'(y) = 0, so we may also use 
g(y) = 0. This is not always the case - we may have to find a function of y alone that we can add, 
to make the partial derivative equal to what we want. So, setting g(y) = 0, our potential becomes: 

  P(x,y) = x^3/3 - x*y^2

To verify it, we compute the partial derivatives of P with respect to x,y:

  dP/dx = x^2 - y^2
  dP/dy = -2*x*y

so our P(x,y) does indeed work as potential for our Polya vector field. How about integrating w2 
with respect to y:

  Q(x,y) = -2*x*y^2 / 2 = -x*y^2 + g(x)

find the partial derivative of Q with respect to x:

  dQ/dx = -y^2 + g'(x)

which should be equal to x^2 - y^2, so we need g'(x) = x^2. Integrating with respect to x gives: 
g(x) = x^3/3 + C. Setting C to zero, we get:

  Q(x,y) = -x*y^2 + x^3/3

which equals P(x,y) that we computed before.

What about integrating w1 with respect to x to get P and w2 with respect to y to get Q:

  P = x^3/3 - x*y^2 + f(y)
  Q =       - x*y^2 + g(x)

And to find f(y), scan Q for terms that *only* depend on y (there is none, so f(y) = 0) or find g(x) 
by scanning P for terms that depend *only* on x (that gives g(x) = x^3/3). Then substitute the so 
found f (or g) into P (or Q). Or what about equating p and Q:

  P = Q 
  x^3/3 - x*y^2 + f(y) = - x*y^2 + g(x)
  x^3/3 + f(y) = g(x)

...not sure, what is the "best" algorithm


----------------------------------------------------------------------------------------------------
This is now integrated into the paper "The Polya Potential of the Riemann Zeta Function"

Potential for 1/z. We'll use SageMath to find real and imaginary part of complex inversion:

var("x y")
assume(x, "real")
assume(y, "real")
t = 1 / (x + I * y)
t.real(), t.imag()

which gives: (x/(x^2 + y^2), -y/(x^2 + y^2)), so the Polya vector field for 1/z is given by:

  u(x,y) = x / (x^2 + y^2)
  v(x,y) = y / (x^2 + y^2)
  
Let's integrate u with respect to x and v with respect to y to find the potential:  
  
var("x y")  
u = x / (x^2 + y^2)
v = y / (x^2 + y^2)
Pu = integral(u, x)
Pv = integral(v, y)
Pu, Pv

which gives: (1/2*log(x^2 + y^2), 1/2*log(x^2 + y^2)), so the Polya potential for 1/z is given by:
 
  p(x,y) = log(x^2 + y^2) / 2
  
It can be verified to be indeed a potential for u,v via:
  
var("x y")  
p = log(x^2 + y^2) / 2
px = diff(p, x)
py = diff(p, y)
px, py  

  
----------------------------------------------------------------------------------------------------
This is now PARTIALLY integrated into the paper "The Polya Potential of the Riemann Zeta Function"

Potential for z^n

  z^n = (x + iy)^n = \sum_{k=0}^n binom(n,k)  x^k (iy)^{n-k}

The following Sage code can be used for experimentation. Tweak n:

var("x y")
assume(x, "real")
assume(y, "real")
n = 5
z = x + I*y
w = z^n
w.real(), w.imag()

This code gives the following results:

n=0:  Re = 1,                                        Im = 0 
n=1:  Re = x,                                        Im = y
n=2:  Re = x^2 - y^2,                                Im = 2*x*y
n=3:  Re = x^3 - 3*x*y^2,                            Im = 3*x^2*y - y^3
n=4:  Re = x^4 - 6*x^2*y^2  + y^4,                   Im = 4*x^3*y - 4*x*y^3
n=5:  Re = x^5 - 10*x^3*y^2 + 5*x*y^4,               Im = 5*x^4*y - 10*x^2*y^3 + y^5
n=6:  Re = x^6 - 15*x^4*y^2 + 15*x^2*y^4 - y^6,      Im = 6*x^5*y - 20*x^3*y^3 + 6*x*y^5
n=7:  Re = x^7 - 21*x^5*y^2 + 35*x^3*y^4 - 7*x*y^6,  Im = 7*x^6*y - 35*x^4*y^3 + 21*x^2*y^5 - y^7

We always take binomial coeffs from the n-th line of Pascal's triangle. The coeffs of each line go
alternatingly into the real and imaginary part. Within these parts, there's also a sign alternation. 
They multiply terms of the form x^k y^(n-k) where k starts at n in the real part and at n-1 in the 
imaginary part and decrements by 2 from term to term. To find the potential, we can integrate the 
real part with respect to x. When n is even, we can assume that the part of the potential that 
depends only on y (the x-integration constant) is just zero because in these cases, the imaginary 
parts have no term that purely depends on y but not on x. For odd n, the f(y) term is given by 
+- y^(n+1) / (n+1) where + is used for 1,5,9,13,... and - for 3,7,11,15,... This results from 
observing the purely y-dependent part of the imaginary part and integrating it with respect to y.
Oh - but wait - it must be negated for the Polya field, so maybe the +- must be the other way 
around. Let's see if we can make a general formula for the real part:

n even: Re = sum_{k=0}^{n/2} c_nk x^2k y^(n-2k)  
n odd:  

with c_nk = ...

ToDo: write a function double rsPolyaPotentialPowInt(double x, double y, int n) that computes
the Polya potential for f(z) = z^n = (x + iy)^n. Maybe make a class rsPolyaPotential with static 
members powInt, exp, reciprocal, etc. Verify the correctness by computing partial derivatives with 
respect to x and y numerically and compare the results to the reral and (negated) imaginary parts of
an evaluation of the actual complex function. Maybe evaluate at least at 0,1,-1,i,-i... maybe also
1+i,-1+i,1-i,-1-i


Notes:

Generalizing this to w(z) = z^n requires use of the binomial theorem.

By looking at the plot of the potential of the Polya vector field, we can identify the zeros of the
original functions as the extrema and saddles of the potential, and the extrema of the original 
function are points of steepest slope. I think, we can also identify fixed points by looking at the
potential of f(z) - z instead of f(z) itself. The zeros of f(z) - z should be the fixed points of 
f(z).

----------------------------------------------------------------------------------------------------
This snippet can be used to produce Polya vector fields u(x,y), v(x,y) and the potentials P(x,y) for
complex functions w = f(z). The potential P can be read of from U,V. by using the common terms and 
if there are left-over terms in either or both of the functions, they should be added, too.


var("x y")
assume(x, "real")
assume(y, "real")
z = x + I*y
w = z^2                  # Define function w = f(z)
u = w.real()
v =-w.imag()
U = integral(u, x)
V = integral(v, y)
u, v, U, V

For example, for w = z^2, we get:

(x^4 - 6*x^2*y^2 + y^4,  -4*x^3*y + 4*x*y^3,  1/5*x^5 - 2*x^3*y^2 + x*y^4,  -2*x^3*y^2 + x*y^4)

The last two expressions are U,V. The terms that depend on x and y are the same in both expressions 
but U has the additional term 1/5*x^5 that depends only on x. The full potential should include this 
term too. It's the "integration constant" in V. If V had a term that depends only on y, we would 
have to include it in P(x,y), too. It would be the integration constant in U. It turns out to be 
zero in this case, though.

z^n:

n    P(x,y)
0    x
1    1/2*x^2 - 1/2*y^2
2    1/3*x^3 - x*y^2
3    1/4*x^4 - 3/2*x^2*y^2 + 1/4*y^4
4    1/5*x^5 - 2*x^3*y^2 + x*y^4
5    1/6*x^6 - 5/2*x^4*y^2 + 5/2*x^2*y^4 - 1/6*y^6
6    1/7*x^7 - 3*x^5*y^2 + 5*x^3*y^4 - x*y^6
7    1/8*x^8 - 7/2*x^6*y^2 + 35/4*x^4*y^4 - 7/2*x^2*y^6 + 1/8*y^8
8    1/9*x^9 - 4*x^7*y^2 + 14*x^5*y^4 - 28/3*x^3*y^6 + x*y^8

I think, we can always take V and add a term  x^(n+1) / (n+1)

----------------------------------------------------------------------------------------------------
Example: w = f(z) = z^5

We get:
P(x,y) = 1/6*x^6 - 5/2*x^4*y^2 + 5/2*x^2*y^4 - 1/6*y^6
u(x,y) = x^5 - 10*x^3*y^2 + 5*x*y^4
v(x,y) = -5*x^4*y + 10*x^2*y^3 - y^5

Let's produce the Hessian:

P_xx = 5*x^4 - 30*x^2*y^2 + 5*y^4   = u_x
P_yy = -5*x^4*y + 10*x^2*y^3 - y^5  = v_y
P_xy = -20*x^3*y + 20*x*y^3         = u_y = v_x = P_yx

At the critical saddle point (x,y) = (0,0), the Hessian is indeed zero. That's the requirement for
a saddle point. 

Compute the determinant: ...






----------------------------------------------------------------------------------------------------


ToDo:
-work out the potential for some other important functions such as z^n, 1/z, exp(z),
 sin(z), cos(z), log(z), etc.
-Maybe try a function like f(z) = (z-1)*(z+1)*(z-i)*(z+i) 
-Could we automate the step of combining both integrals U and V into P by doing something like:
 P = V + U.free_of(y)  or something like that? Is there a function like "free_of" that extracts 
 terms that are free of a given variable?
-Maybe make a paper "An Inventory of Polya Potentials" that lists more Polya potebtials. 



Questions:
-when we don't take the Polya vector field, i.e. the vector field obtained by taking the complex 
 conjugate, we don't get a potential field - the sign of the imaginary part is wrong. However - 
 does it make sense to consider that field, too?
-Has this use of -1 something to do with "integrating factors", i.e. the -1 is such an integrating 
 factor?
 https://www.storyofmathematics.com/integrating-factor/
 https://math.okstate.edu/people/binegar/2233-S99/2233-l12.pdf
 ...hmm...noo...that seems to be something else and not really related.
-Does the potential help to evaluate and/or make sense of complex path integrals?
-If we apply path integration to the Polya vector field, is there an relationship of those path 
 integrals with the complex path integral? Almost certainly - but what exactly is it? Maybe the 
 real part is equal to the circulation around the loop and the imaginary part is equal to the flux 
 through the loop (maybe with a minus sign)? Can this be interpreted in terms of curl and 
 divergence? The integrated curl around the loop ("circulation") is the real part (in the direction
 of the path) and the integrated divergence (flux) is the imaginary part (perpendicular to the 
 path, flows out of the region bounded by the loop)? That would seem plausible because 
 multiplication by i is rotation by 90°. ..yes - I think, "Visual Complex Analysis" discusses this 
 stuff.
-Has the potential difference between two points (i.e. the path integral between the two points 
 which is independent from the path) a particular relation to the complex path integral between 
 these points? We are looking for a relation between a scalar and a vectorial path integral. One 
 integrates over P, the other over (u,v). Maybe this should be framed in terms of special features
 path integrals in divergence-free vector fields. 
-Could sqrt(z), cbrt(z), log(z), etc tackled by the "integral of inverse function" rule?
-Maybe polar coordinates could be useful? For example: f(z) = z^2 in polar coordinates is
 (r * e^(i*p))^2. We could extract two functiuons s(r,p) = r^2, q(r,p) = 2*p and therefore the 
 potential in polar coordinates would be P(r,p) = r^3/3 + p^2. Here r,p are input radius and angle 
 and s,q output radius and angle.. For z^(1/2), we'd get s(r,p) = r^(1/2), q(r,p) = p/2 and
 P(r,p) = (2/3)*r^(3/2) + (1/4)*p^2
-It is interesting to note that s(r,p) does in fact not depend on p and q(r,p) not on r. The 
 functions decouple in polar coordinates.
-Maybe we could also used mixed coordinates: s(x,y), q(x,y)  or  u(r,p), v(r,p)
 Maybe for f(z) = ln(z), mixed coordinates are best? ln(r * e^(i*p)) = ln(r) + i*p. We can read off
 u(r,p) = ln(r) and v(r,p) = p (or maybe -p, depending on whether or not we bake in a minus sign 
 into v as we did for the purely cartesian v). 
-Maybe other coordinate systems could be useful as well?
-What are the CR-equations in polar coordinates?
-Maybe look at U+V and U-V. For many functions (exp, sin, cos, 1/z), the latter is zero. Does that
 mean something? Yeah - it means that in both integrations, the integrations constants were zero.
 