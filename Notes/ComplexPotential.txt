We try to find a potential function for the complex function:
 
   w(z) = z^2
   
seen as 2D Polya vector field:
 
   w(x,y) = (x^2-y^2, -2*x*y) = (w1(x,y), w2(x,y))
   
We integrate w1 with respect to x:

  P(x,y) = x^3/3 - x*y^2 + g(y)
  
To find g(y), we take the partial derivative of P with respect to y and compare the result to our 
desired -2*x*y:

  dP/dy = -2*x*y + g'(y)
  
which turns out to be exactly equal to what we want if we set g'(y) = 0, so we may also use 
g(y) = 0. This is not always the case - we may have to find a function of y alone that we can add, 
to make the partial derivative equal to what we want. So, setting g(y) = 0, our potential becomes: 

  P(x,y) = x^3/3 - x*y^2

To verify it, we compute the partial derivatives of P with respect to x,y:

  dP/dx = x^2 - y^2
  dP/dy = -2*x*y

so our P(x,y) does indeed work as potential for our Polya vector field. How about integrating w2 
with respect to y:

  Q(x,y) = -2*x*y^2 / 2 = -x*y^2 + g(x)

find the partial derivative of Q with respect to x:

  dQ/dx = -y^2 + g'(x)

which should be equal to x^2 - y^2, so we need g'(x) = x^2. Integrating with respect to x gives: 
g(x) = x^3/3 + C. Setting C to zero, we get:

  Q(x,y) = -x*y^2 + x^3/3

which equals P(x,y) that we computed before.

What about integrating w1 with respect to x to get P and w2 with respect to y to get Q:

  P = x^3/3 - x*y^2 + f(y)
  Q =       - x*y^2 + g(x)

And to find f(y), scan Q for terms that *only* depend on y (there is none, so f(y) = 0) or find g(x) 
by scanning P for terms that depend *only* on x (that gives g(x) = x^3/3). Then substitute the so 
found f (or g) into P (or Q). Or what about equating p and Q:

  P = Q 
  x^3/3 - x*y^2 + f(y) = - x*y^2 + g(x)
  x^3/3 + f(y) = g(x)

...not sure, what is the "best" algorithm

----------------------------------------------------------------------------------------------------
Potential for z^n

  z^n = (x + iy)^n = \sum_{k=0}^n x^k (iy)^(n-k)

The following Sage code can be used for experimentation. Tweak n:

var("x y")
assume(x, "real")
assume(y, "real")
n = 5
z = x + I*y
w = z^n
w.real(), w.imag()

n=0:  Re = 1,                                        Im = 0 
n=1:  Re = x,                                        Im = y
n=2:  Re = x^2 - y^2,                                Im = 2*x*y
n=3:  Re = x^3 - 3*x*y^2,                            Im = 3*x^2*y - y^3
n=4:  Re = x^4 - 6*x^2*y^2  + y^4,                   Im = 4*x^3*y - 4*x*y^3
n=5:  Re = x^5 - 10*x^3*y^2 + 5*x*y^4,               Im = 5*x^4*y - 10*x^2*y^3 + y^5
n=6:  Re = x^6 - 15*x^4*y^2 + 15*x^2*y^4 - y^6,      Im = 6*x^5*y - 20*x^3*y^3 + 6*x*y^5
n=7:  Re = x^7 - 21*x^5*y^2 + 35*x^3*y^4 - 7*x*y^6,  Im = 7*x^6*y - 35*x^4*y^3 + 21*x^2*y^5 - y^7

We always take binomial coeffs from the n-th line of Pascal's triangle. The coeffs of each line go
alternatingly into the real and imaginary part. Within these parts, there's also a sign alternation. 
They multiply terms of the form x^k y^(n-k) where k starts at n in the real part and at n-1 in the 
imaginary part and decrements by 2 from term to term. To find the potential, we can integrate the 
real part with respect to x. When n is even, we can assume that the part of the potential that 
depends only on y (the integration constant) is just zero because in these cases, the imaginary 
parts have no term that purely depends on y but not on x. For odd n, the f(y) term is given by 
+- y^(n+1) / (n+1) where + is used for 1,5,9,13,... and - for 3,7,11,15,... This results from 
observing the purely y-dependent part of the imaginary part and integrating it with respect to y.
Oh - but wait - it must be negated for the Polya field, so maybe the +- must be the other way 
around.


Notes:

Generalizing this to w(z) = z^n requires use of the binomial theorem.

By looking at the plot of the potential of the Polya vector field, we can identify the zeros of the
original functions as the extrema and saddles of the potential, and the extrema of the original 
function are points of steepest slope. I think, we can also identify fixed points by looking at the
potential of f(z) - z instead of f(z) itself. The zeros of f(z) - z should be the fixed points of 
f(z).

ToDo:
-work out the potential for some other important functions such as z^n, 1/z, exp(z),
 sin(z), cos(z), log(z), etc.
 
 



Questions:
-when we don't take the Polya vector field, i.e. the vector field obtained by taking the complex 
 conjugate, we don't get a potential field - the sign of the imaginary part is wrong. However - 
 does it make sense to consider that field, too?
-Has this use of -1 something to do with "integrating factors", i.e. the -1 is such an integrating 
 factor?
 https://www.storyofmathematics.com/integrating-factor/
 https://math.okstate.edu/people/binegar/2233-S99/2233-l12.pdf
 ...hmm...noo...that seems to be something else and not really related.
-Does the potential help to evaluate and/or make sense of complex path integrals?
-If we apply path integration to the Polya vector field, is there relationship of those path 
 integrals with the complex path integral? Almost certainly - but what exactly is it? Maybe the 
 real part is equal to the circulation around the loop and the imaginary part is equal to the flux 
 through the loop (maybe with a minus sign)? Can this be interpreted in terms of curl and 
 divergence? The integrated curl around the loop ("circulation") is the real part (in the direction
 of the path) and the integrated divergence (flux) is the imaginary part (perpendicular to the 
 path, flows out of the region bounded by the loop)? That would seem plausible because 
 multiplication by i is rotation by 90Â°.
 