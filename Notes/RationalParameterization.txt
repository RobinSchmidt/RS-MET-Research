----------------------------------------------------------------------------------------------------
Problem

We assume that we have an implicit definition of an algebraic variety given and we want to find a
rational parameterization for that. There is a recipe for that which sometimes works. We'll see it
in action on the example of the unit circle defined by the equation:

  x^2 + y^2 - 1 = 0
  
That's our implicit definition of the variety. What we want to find is a pair of rational functions
x(t), y(t) that parameterize our given variety. 

----------------------------------------------------------------------------------------------------
Derivation

Our first step is to find some convenient fixed point P on the variety which has rational 
coordinates. We will pick the point 

  P = (0,1) 
  
to be our fixed point. Next, we pick a variable second point Q not assumed to be on the circle. It 
should be chosen conveniently and such that when we connect P and Q by a straight line, this 
(possibly extended) line should intersect our circle in a second point, let's call it R. By 
construction, the line will always intersect (or at least be tangent to) the circle in P. It is this 
second point of intersection R, whose coordinates we want to figure out. It will be some function of
the point Q: R = f(Q). The function f is what we ultimately want to figure out. The point Q should 
be made variable by our parameter t in such a way that, when t sweeps out some interval of values, 
the second point of intersection Q will sweep out our circle. We will chose the point Q to be a 
point on the x-axis with its x-coordinate being equal to t. That is:

  Q = (t,0)
  
Next, we look at the line that connects P and Q. That line can be given parametrically as:

  L(s) = (1-s)*P + s*Q

where it is important to note that the parameter that parameterizes the line, namely s, is a 
different variable than our eventual parameter t that we want to use in our rational 
parameterization (that really confused me initially). Our parametric line can be split into its x-
and y-component:

  x(s) = (1-s)*P_x + s*Q_x = (1-s)*0 + s*t = s*t
  y(s) = (1-s)*P_y + s*Q_y = (1-s)*1 + s*0 = 1-s
  
where we use the notation P = (P_x, P_y), Q = (Q_x, Q_y) for denoting the x- and y-coordinates of 
our points P and Q. Now we want to figure out a value of s, such that the point (x(s), y(s)) 
satisfies our circle equation x^2 + y^2 - 1 = 0. So we plug in the coordinate functions x(s), y(s) 
into the equation:

  0 = (x(s))^2 + (y(s))^2 - 1
  0 = (s*t)^2  + (1-s)^2  - 1  
  0 = s^2*t^2 + 1 - 2*s + s^2 - 1
  0 = s^2*(t^2 + 1) - 2*s
  
From the last line, we can read off that s = 0 satisfies the equation. It would be strange if it 
wouldn't be the case because s = 0 should, by construction, give us back our fixed point P - which 
it indeed dutyfully does. We are interested in the second solution. That should give us the *other*
intersection of our line with the circle - the one we are really interested in. We are allowed to 
divide both sides by s because we now can assume s != 0 because we are interested in an s other than 
zero. That brings us to:

  0 = s*(t^2 + 1) - 2
  s = 2 / (t^2 + 1)
  
which, by plugging that value of s into x(s), y(s), gives:

  x = s*t 
    = (2 / (t^2 + 1)) * t 
    = 2*t / (t^2 + 1)
	
  y = 1-s 
    = 1  -  2 / (t^2 + 1)
	= ((t^2 + 1) / (t^2 + 1))  -  (2 / (t^2 + 1))
	= (t^2 + 1 - 2)  / (t^2 + 1)
    = (t^2 - 1) / (t^2 + 1)
  
which are both functions of our t-parameter which determines our variable point on the x-axis, as
desired. Summarizing, we have arrived at the following rational parameterization of the unit circle:

  ┌──────────────────────────────┐
  │ x(t) = (  2*t  ) / (t^2 + 1) │
  │ y(t) = (t^2 - 1) / (t^2 + 1) │
  └──────────────────────────────┘
  
Tadaa! That's our final result!  
  
----------------------------------------------------------------------------------------------------
Discussion

The parameterization is "rational" in the sense that both coordinate functions are rational 
functions of the parameter t. That implies that when we plug in rational numbers for t, the 
resulting coordinates x(t), y(t) will also be rational numbers. In fact, our parameterization 
generates almost all rational points on the unit circle when t sweeps from minus infinity to plus 
infinity. The only missing point is our original fixed point P = (0,1). This is the edge case for 
when the line approaches tangency when t approaches plus or minus infinity. In this case, the second 
point of intersection Q approaches our fixed first point of intersection P.

Our found formulas are the same as those on page 2 in this book (the page is available in the
preview):

  https://www.amazon.de/-/en/Anil-Nerode/dp/3031116151

but different from those shown on wikipedia:

  https://en.wikipedia.org/wiki/Circle#Parametric_form

First of all, the formulas on wikipedia are more general because they do not assume the unit circle
but rather a general circle with center (a,b) and radius r. But even when setting (a,b) = (0,0) 
and r = 1, the formulas are still different. Apparently, the formulas on wikipedia can be derived by 
choosing a different fixed point P and/or a different formula to costruct the second point Q. 
Another derivation that I have seen in this book  (pages 8,9 - not available in the preview):

  https://www.amazon.de/-/en/Avner-Ash/dp/0691163502/

arrives at formulas compatible with those on wikipedia. They choose the fixed point P = (-1,0) and 
let the variable point Q sweep out the y-axis. Their derivtaion is also a bit simpler than mine
because they do not use the parametric equation of the line but rather an explicit form y = f(x). I 
have opted for the parametric line equation because I hope that this generalizes better to other
varieties.

I said in the beginning, that this recipe *sometimes* works to find a rational parameterization for 
an implicitly defined algebraic variety. Our derivation here worked out so nicely because at some 
point, we had this equation:

  0 = s^2*(t^2 + 1) - 2*s

which allowed us to divide by s on both sides which in turn allowed us to solve for s in terms of t 
like so:

   s = 2 / (t^2 + 1)

Had there be a constant term c in the equation:

  0 = s^2*(t^2 + 1) - 2*s + c
  
we would have had to invoke the quadratic formula to solve for s and we might have gotten two 
solutions and these solutions would involve a square root. So, it seems like that arriving a purely 
rational solution was due to being "lucky" enough, that some of the equations along the way 
simplified in a nice way. In a different setting, it might be possible that we may need to invoke 
the quadratic formula and if the variety is of higher degree, quite possibly even the cubic or 
quartic formula or a numeric polynomial root-finder. In such cases, our parameterization would not
qualify as "rational" anymore - but at least, it would still qualify as algebraic. But I think, when
the equation has only degree 2, there can only be two solutions - and one of them is s = 0 with 
L(s=0) = P by construction. But with higher degree curves, things may get more complicated.

...I guess. I didn't try this method on other examples yet. When I do and find something 
interesting, I'll extend this document with my findings.


====================================================================================================

ToDo, Questions:

- Use the same method to find a rational parameterization of an ellipsoid. That shows how to 
  generalize the method to a variety of higher dimension and allows the variety itself to be 
  tweakable in shape. I *hope* that it works out smoothly when we approach it as follows:
  - Use the implicit equation: (x/a)^2 + (y/b)^2 + (z/c)^2 - 1 = 0 for the ellipsoid.
  - Use the same ansatz with the line: L(s) = (1-s)*P + s*Q
  - Use P = (0,0,c) as fixed point P. It's the point where the z-axis pierces ellipsoid.
  - Use Q = (u,v,0) as second point Q. It is a point in the xy-plane which has the two parameters 
    u,v that determine its x- and y- coordinates.
  - The hope is, that when we choose u,v, to be both rational, that this will generate all rational
    points on the ellipsoid (assuming our ellipsoid shape parameters a,b,c are also rational, of 
	course). I have no idea yet, if it will indeed work out like that.
  
- How would one proceed to find the more standard parameterization for the unit circle  
  x(t) = cos(t), y(t) = sin(t)  from  x^2 + y^2 - 1 = 0? I guess one could just write it as  
  x^2 + y^2 = 1  and then say: "Hey! I know that sin^2 + cos^2 = 1" - but looking at the implicit 
  equation and *guessing* a parameterization does not really count as a generalizable algorithm.
  The sin/cos parameterization has the advantage of being "natural", i.e. by arc-length whereas the
  rational parameterization has the advantage of not needing to tap into the world of transcendental
  functions - the coordinate functions are "simpler" in some sense.
  
- Maybe try to use the method to find rational points on an elliptic curve (not an ellipse!). I 
  think, this is the same idea that underlies the definition of the "addition" of points on an
  elliptic curve. This addition is also defined in terms of an intersection of a line (namely, the
  line that passes through the two summand points) with the curve. In this case, we look for the 
  third intersection point when two of them are given. But here, the goal is different: we want to 
  "sweep out" all rational points on the curve with a (rational) parameter t.
  
- Give an inverse algorithm: Given a (rational?) parameterization, find the corresponding implicit 
  equation. Ideally, we want to able to convert back and forth between implicit and parametric 
  representation at will for all sorts of algebraic varieties. Not sure, if that's possible, though.
  See "Algebraic Curves and Riemann Surfaces..." (ACRS), pg 68
  
- The fact that t needs to traverse -inf...+inf could be inconvenient. There is a simple rational 
  (bilinear) function that maps -1...+1 to -inf...+inf. Look it up - it's somewhere in the codebase 
  near the stuff about the linfrac interpolation. Maybe we could use that to "pre-process" t. Maybe
  it was that: f(x) = -x / ((x-1)*(x+1))? It has, by construction, poles at x = -1 and x = +1 and a 
  zero at x = 0: https://www.desmos.com/calculator/bzemhovcv5
  
- How can we be sure that the method generates *all* rational points on the circe? Is this actually
  the case? I think, I read it somewhere but don't know anymore where. I think, we must show that
  *every* rational point on the circle is being covered by *some* rational value for t. Or to turn 
  it around: Whenever the xy-coordinates of a point on the circle are rational, the corresponding 
  t-value is also rational. -> Investigate the inverse functions t(x) and t(y). If they are rational
  functions in t, it should work.
  
- Will the method also produce (all) rational points on the circle when we use some other function
  for L(t)? Maybe a diagonal line or something even more crazy like x(t) = t, y(t) = 1/t?
  
  
Resources:  

- Algebraic Curves and Riemann Surfaces for Undergraduates: The Theory of the Donut
  https://www.amazon.de/-/en/Anil-Nerode/dp/3031116151
  ACRS
  
- Finding Rational Parametric Curves of Relative Degree One or Two:  
  https://maa.org/sites/default/files/pdf/cmj_ftp/CMJ/November%202010/3%20Articles/4%20Boyles/08-256%20wpics.pdf  
  
- Rational Parametrization of Curves  
  https://www3.risc.jku.at/education/courses/ss2018/caag/08-para.pdf  

  
----------------------------------------------------------------------------------------------------
Derivation for the ellipsoid:

The implicit equation is:

  (x/a)^2 + (y/b)^2 + (z/c)^2 - 1 = 0
  
The points are:

  P = (0,0,c)
  Q = (u,v,0)
  
The line is:

  L(s) = (1-s)*P + s*Q
  
which leads to the 3 equations:

  x(s) = (1-s)*0 + s*u = s*u
  y(s) = (1-s)*0 + s*v = s*v
  z(s) = (1-s)*c + s*0 = c-s*c
  
Plugging them into the implicit equations gives:

  0 =  (s*u/a)^2 + (s*v/b)^2 + ((c-s*c)/c)^2 - 1 
    =  (u/a)^2*s^2 + (v/b)^2*s^2 + (1-s)^2 - 1 
	=  ((u/a)^2 + (v/b)^2) * s^2 + 1 - 2*s + s^2 - 1
	=  ((u/a)^2 + (v/b)^2 + 1) * s^2 - 2*s	
  
One solution is s = 0   which gives back out point P by construction. The other solution is obtained
by dividing both sides by s:

  0 = ((u/a)^2 + (v/b)^2 + 1) * s - 2
  s = 2 / ((u/a)^2 + (v/b)^2 + 1)
  
Plugging this value of s into the parametric equations gives:

  x(s) = (2 / ((u/a)^2 + (v/b)^2 + 1)) * u
  y(s) = (2 / ((u/a)^2 + (v/b)^2 + 1)) * v
  z(s) = c - (2 / ((u/a)^2 + (v/b)^2 + 1))*c
  
Defining 

  d = ((u/a)^2 + (v/b)^2 + 1)
  
and simplifying gives:

  x(s) = (2*u / d) 
  y(s) = (2*v / d)
  z(s) = c - (2*c / d) = (c*d - 2*c) / d
  
  
ToDo: 

- Verify formulas numerically. Pick shape parameters a,b,c, pick some values for u,v, compute x,y,z
  and plug them into the ellipsoid equation and check, if we get zero. Maybe write a little sage 
  script. 

- Maybe we can even write a sage script that automates the whole derivation such that we just need 
  to plug in teh implicit equation
  
  
----------------------------------------------------------------------------------------------------

- ACRS, pg 68/69 gives the following algorithm for finding the implicit equation when a rational
  parameterization is given. I didn't try it yet and just reproduce the algorithm as I currently 
  understand it (which might be mistaken):
  
  - We start with the parametric equation f(t) = (f_x(t), f_y(t)). The book uses a greek psi 
    instead of f and suppresses the argument t. The numerators and denominators are denoted by 
	g_x, h_x, g_y, h_y. We have: f(t) = ( g_x(t)/h_x(t),  g_y(t)/h_y(t) )
	
  - We define the polynomials: 
      p(x,y,t) = x * h_x(t) - g_x(t)
      q(x,y,t) = y * h_y(t) - g_y(t)
    which we interpret as polynomials in K[x,y][t] where K is the ring in which we work (e.g. the 
    real numbers). The notation means that we first adjoin the variables x,y to K and then adjoin 
	the variable t to the resulting ring of bivariate polynomials, so we end up with the ring of
    trivariate polynomials K[x,y,t] (if I'm not mistaken). Even though y does not appear in p and 
	x not in q, we'll consider them all as polynomials in the 3 variables x,y,t.
   
  - Now we take the *resultant* of p and q with respect to t: r = res_t(p,q). That means, when 
    taking the resultant, we consider p,q as univariate polynomials in t and treat x,y as constant
	parameters. The resulting resultant is a polynomial in the variables x,y: r = r(x,y). This 
	r(x,y) is our desired implicit equation for the curve. ...if I understand it correctly. 
	
  - See here for the resultant:  https://en.wikipedia.org/wiki/Resultant  I think, the resultant is 
    just the polynomial greatest common divisor and could perhaps be computed via Euclid's algo for
	polynomials? I have an implementation of that somewhere in/near rsRationalFunction. The book 
	uses the Sylvester matrix to define the resultant. It's the determinant of that matrix. But I 
	think, this is not and algorithmically attractive way to actually compute it. Maybe see:
	https://en.wikipedia.org/wiki/Polynomial_greatest_common_divisor#Subresultant_pseudo-remainder_sequence
	see also: https://www.youtube.com/watch?v=dC6dxFhzKoc
	...but I guess, I would need an implementation of the polynomial GCD for trivariate polynomials.
	Maybe try writing a class for general multivariate polynomials. Or maybe don't and just use a
	computer algebra system.
	https://ask.sagemath.org/question/57421/resultant-of-symbolic-expression/
